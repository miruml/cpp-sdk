/**
* Miru API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 0.1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ConfigInstanceActivityStatus.h"
#include "Helpers.h"

namespace org::openapitools::server::model
{

nlohmann::json ConfigInstanceActivityStatus::to_json() const
{
    nlohmann::json j;
    ::org::openapitools::server::model::to_json(j, *this);
    return j;
}

ConfigInstanceActivityStatus ConfigInstanceActivityStatus::from_json(const nlohmann::json& j)
{
    ConfigInstanceActivityStatus o{};
    ::org::openapitools::server::model::from_json(j, o);
    return o;
}

void ConfigInstanceActivityStatus::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool ConfigInstanceActivityStatus::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ConfigInstanceActivityStatus::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ConfigInstanceActivityStatus" : pathPrefix;

    
    if (value == ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::INVALID_VALUE_OPENAPI_GENERATED)
    {
        success = false;
        msg << _pathPrefix << ": has no value;";
    }

    return success;
}

bool ConfigInstanceActivityStatus::operator==(const ConfigInstanceActivityStatus& other) const
{
    return
    value == other.value
    ;
}

bool ConfigInstanceActivityStatus::operator!=(const ConfigInstanceActivityStatus& other) const
{
    return !(*this == other);
}

void to_json(nlohmann::json& j, const ConfigInstanceActivityStatus& o)
{
    j = nlohmann::json::object();
    
    switch (o.value)
    {
    case ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::INVALID_VALUE_OPENAPI_GENERATED:
        j = "INVALID_VALUE_OPENAPI_GENERATED";
        break;
    case ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::CONFIG_INSTANCE_ACTIVITY_STATUS_CREATED:
        j = "created";
        break;
    case ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::CONFIG_INSTANCE_ACTIVITY_STATUS_VALIDATING:
        j = "validating";
        break;
    case ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::CONFIG_INSTANCE_ACTIVITY_STATUS_VALIDATED:
        j = "validated";
        break;
    case ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::CONFIG_INSTANCE_ACTIVITY_STATUS_QUEUED:
        j = "queued";
        break;
    case ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::CONFIG_INSTANCE_ACTIVITY_STATUS_DEPLOYED:
        j = "deployed";
        break;
    case ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::CONFIG_INSTANCE_ACTIVITY_STATUS_REMOVED:
        j = "removed";
        break;
    }
}

void from_json(const nlohmann::json& j, ConfigInstanceActivityStatus& o)
{
    
    auto s = j.get<std::string>();
    if(s == "created") {
        o.value = ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::CONFIG_INSTANCE_ACTIVITY_STATUS_CREATED;
    } 
    else if(s == "validating") {
        o.value = ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::CONFIG_INSTANCE_ACTIVITY_STATUS_VALIDATING;
    } 
    else if(s == "validated") {
        o.value = ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::CONFIG_INSTANCE_ACTIVITY_STATUS_VALIDATED;
    } 
    else if(s == "queued") {
        o.value = ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::CONFIG_INSTANCE_ACTIVITY_STATUS_QUEUED;
    } 
    else if(s == "deployed") {
        o.value = ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::CONFIG_INSTANCE_ACTIVITY_STATUS_DEPLOYED;
    } 
    else if(s == "removed") {
        o.value = ConfigInstanceActivityStatus::eConfigInstanceActivityStatus::CONFIG_INSTANCE_ACTIVITY_STATUS_REMOVED;
    }  else {
        std::stringstream ss;
        ss << "Unexpected value " << s << " in json"
           << " cannot be converted to enum of type"
           << " ConfigInstanceActivityStatus::eConfigInstanceActivityStatus";
        throw std::invalid_argument(ss.str());
    } 
    
}

} // namespace org::openapitools::server::model

