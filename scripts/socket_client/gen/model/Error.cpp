/**
* Miru API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 0.1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Error.h"
#include "Helpers.h"

namespace org::openapitools::server::model
{

nlohmann::json Error::to_json() const
{
    nlohmann::json j;
    ::org::openapitools::server::model::to_json(j, *this);
    return j;
}

Error Error::from_json(const nlohmann::json& j)
{
    Error o{};
    ::org::openapitools::server::model::from_json(j, o);
    return o;
}

void Error::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool Error::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool Error::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "Error" : pathPrefix;

                    
    return success;
}

bool Error::operator==(const Error& other) const
{
    return
    
    code == other.code && params == other.params && message == other.message && debug_message == other.debug_message;
}

bool Error::operator!=(const Error& other) const
{
    return !(*this == other);
}

void to_json(nlohmann::json& j, const Error& o)
{
    j = nlohmann::json::object();
    j["code"] = o.code;
    if (o.params.has_value()) {
        j["params"] = o.params.value();
    } else {
        j["params"] = nullptr;
    }
    j["message"] = o.message;
    j["debug_message"] = o.debug_message;
    
}

void from_json(const nlohmann::json& j, Error& o)
{
    j.at("code").get_to(o.code);
    if (j.find("params") != j.end()) {
        if (j.at("params").is_null()) {
            o.params = std::nullopt;
        } else {
            o.params = j.at("params").get<nlohmann::json>();
        }
    }
    j.at("message").get_to(o.message);
    j.at("debug_message").get_to(o.debug_message);
    
}

} // namespace org::openapitools::server::model

