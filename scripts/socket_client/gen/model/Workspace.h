/**
* Miru API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 0.1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * Workspace.h
 *
 * 
 */

#ifndef Workspace_H_
#define Workspace_H_


#include <string>
#include "BillingPlan.h"
#include <nlohmann/json.hpp>


namespace org::openapitools::server::model
{

struct  Workspace
{
    

    std::string object;
    std::string id;
    std::string name;
    org::openapitools::server::model::BillingPlan billing_plan;
    

    bool operator==(const Workspace& other) const;
    bool operator!=(const Workspace& other) const;

    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    nlohmann::json to_json() const;
    static Workspace from_json(const nlohmann::json& j);
};

 void to_json(nlohmann::json& j, const Workspace& o);
 void from_json(const nlohmann::json& j, Workspace& o);


} // namespace org::openapitools::server::model


#endif /* Workspace_H_ */
